{"ast":null,"code":"var _jsxFileName = \"/home/alexeyko/Documents/React-tracker/src/components/Main/Tracker/TimerNew/TimerNew.jsx\";\nimport React, { useState } from 'react';\nimport s from './TimerNew.module.css';\nimport { Field, reduxForm } from \"redux-form\";\nimport { Input } from \"../../../../common/Forms/FormsControl\";\nimport Stopwatch from \"./Stopwatch/Stopwatch\";\nimport TimeSlider from \"../TimeSlider/TimeSlider\";\nimport { connect } from \"react-redux\";\nimport { submitForm } from \"../../../../store/reducers/issuesReducer\";\n\nconst TimerNew = props => {\n  const [onTimer, setOnTimer] = useState(false);\n  const [onSlider, setonSlider] = useState(false);\n  const [stopwatchTime, setStopwatchTime] = useState(0);\n  const [sliderValue, setSliderValue] = useState([540, 690]);\n\n  const toggleTimer = () => {\n    setOnTimer(!onTimer);\n  };\n\n  const toggleSlider = () => {\n    setonSlider(!onSlider);\n  };\n\n  let submitForm = data => {\n    props.submitForm(stopwatchTime, sliderValue, data.label, data.issue);\n    setStopwatchTime(0);\n    setSliderValue([540, 690]);\n    toggleSlider();\n    toggleTimer();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, onTimer ? null : /*#__PURE__*/React.createElement(\"div\", {\n    className: s.newWorklog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: s.appendWorklog,\n    onClick: toggleTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: s.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, \"NEW WORKLOG\")), onTimer ? /*#__PURE__*/React.createElement(\"div\", {\n    className: s.timerOn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(IssueForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Stopwatch, {\n    toggleSlider: toggleSlider,\n    stopwatchTime: stopwatchTime,\n    setStopwatchTime: setStopwatchTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), onSlider ? /*#__PURE__*/React.createElement(TimeSlider, {\n    onSubmit: submitForm,\n    sliderValue: sliderValue,\n    setSliderValue: setSliderValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 28\n    }\n  }) : null) : null);\n};\n\nlet IssueForm = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: 'label',\n    component: Input,\n    placeholder: 'New Label',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: 'issue',\n    component: Input,\n    placeholder: 'New Issue',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  })));\n};\n\nIssueForm = reduxForm({\n  form: 'issueForm'\n})(IssueForm);\n\nlet mapStateToProps = state => ({});\n\nexport default connect(mapStateToProps, {\n  submitForm\n})(TimerNew);","map":{"version":3,"sources":["/home/alexeyko/Documents/React-tracker/src/components/Main/Tracker/TimerNew/TimerNew.jsx"],"names":["React","useState","s","Field","reduxForm","Input","Stopwatch","TimeSlider","connect","submitForm","TimerNew","props","onTimer","setOnTimer","onSlider","setonSlider","stopwatchTime","setStopwatchTime","sliderValue","setSliderValue","toggleTimer","toggleSlider","data","label","issue","newWorklog","appendWorklog","timerOn","IssueForm","form","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport s from './TimerNew.module.css';\nimport {Field, reduxForm} from \"redux-form\";\nimport {Input} from \"../../../../common/Forms/FormsControl\";\nimport Stopwatch from \"./Stopwatch/Stopwatch\";\nimport TimeSlider from \"../TimeSlider/TimeSlider\";\nimport {connect} from \"react-redux\";\nimport {submitForm} from \"../../../../store/reducers/issuesReducer\";\n\nconst TimerNew = (props) => {\n\n    const [onTimer, setOnTimer] = useState(false);\n    const [onSlider, setonSlider] = useState(false);\n    const [stopwatchTime, setStopwatchTime] = useState(0);\n    const [sliderValue, setSliderValue] = useState([540, 690]);\n\n\n    const toggleTimer = () => {\n        setOnTimer(!onTimer);\n    };\n\n    const toggleSlider = () => {\n        setonSlider(!onSlider);\n    };\n\n    let submitForm = (data) => {\n        props.submitForm(stopwatchTime, sliderValue, data.label, data.issue);\n        setStopwatchTime(0);\n        setSliderValue([540, 690]);\n        toggleSlider();\n        toggleTimer();\n    }\n\n    return (\n        <div>\n            {onTimer ? null :\n                <div className={s.newWorklog}>\n                    <button className={s.appendWorklog} onClick={toggleTimer}/>\n                    <p className={s.label}>NEW WORKLOG</p>\n                </div>}\n            {onTimer ? <div className={s.timerOn}>\n                <IssueForm/>\n                <Stopwatch toggleSlider={toggleSlider} stopwatchTime={stopwatchTime} setStopwatchTime={setStopwatchTime}/>\n                {onSlider? <TimeSlider onSubmit={submitForm} sliderValue={sliderValue} setSliderValue={setSliderValue}/>: null}\n            </div> : null}\n        </div>\n    )\n};\n\nlet IssueForm = (props) => {\n    return (\n        <div>\n            <form>\n                <Field name={'label'} component={Input} placeholder={'New Label'}/>\n                <Field name={'issue'} component={Input} placeholder={'New Issue'}/>\n            </form>\n        </div>\n    )\n}\n\nIssueForm = reduxForm(\n    {\n        form: 'issueForm'\n    }\n)(IssueForm);\n\nlet mapStateToProps = (state) => ({\n});\n\nexport default connect (mapStateToProps, {\n    submitForm,\n})(TimerNew);\n\n\n"]},"metadata":{},"sourceType":"module"}