{"ast":null,"code":"import _slicedToArray from\"/home/alexeyko/Documents/React-tracker/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Calendar}from\"react-calendar\";import'react-calendar/dist/Calendar.css';import'./Calendar.scss';var NewCalendar=function NewCalendar(){var _useState=useState(new Date()),_useState2=_slicedToArray(_useState,2),value=_useState2[0],onChange=_useState2[1];var formatShortWeekday=function formatShortWeekday(locale,date){return['S','M','T','W','T','F','S'][date.getDay()];};var tileContent=function tileContent(date,view){return/*#__PURE__*/React.createElement(\"span\",{className:'meter'});};return/*#__PURE__*/React.createElement(Calendar,{onChange:onChange,value:value,locale:'en-EN',formatShortWeekday:formatShortWeekday,tileContent:tileContent});};export default NewCalendar;","map":{"version":3,"sources":["/home/alexeyko/Documents/React-tracker/src/components/Main/DateSorting/Calendar/NewCalendar.jsx"],"names":["React","useState","Calendar","NewCalendar","Date","value","onChange","formatShortWeekday","locale","date","getDay","tileContent","view"],"mappings":"yHAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,OAAQC,QAAR,KAAuB,gBAAvB,CACA,MAAO,kCAAP,CACA,MAAO,iBAAP,CAGA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,eACIF,QAAQ,CAAC,GAAIG,CAAAA,IAAJ,EAAD,CADZ,wCACfC,KADe,eACRC,QADQ,eAEtB,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,MAAD,CAASC,IAAT,QAAkB,CAAC,GAAD,CAAM,GAAN,CAAW,GAAX,CAAgB,GAAhB,CAAqB,GAArB,CAA0B,GAA1B,CAA+B,GAA/B,EAAoCA,IAAI,CAACC,MAAL,EAApC,CAAlB,EAA3B,CACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACF,IAAD,CAAOG,IAAP,CAAgB,CAChC,mBACI,4BAAM,SAAS,CAAE,OAAjB,EADJ,CAEH,CAHD,CAKA,mBACI,oBAAC,QAAD,EACI,QAAQ,CAAEN,QADd,CAEI,KAAK,CAAED,KAFX,CAGI,MAAM,CAAE,OAHZ,CAII,kBAAkB,CAAEE,kBAJxB,CAKI,WAAW,CAAEI,WALjB,EADJ,CASH,CAjBD,CAmBA,cAAeR,CAAAA,WAAf","sourcesContent":["import React, {useState} from \"react\";\nimport {Calendar} from \"react-calendar\";\nimport 'react-calendar/dist/Calendar.css'\nimport './Calendar.scss'\n\n\nconst NewCalendar = () => {\n    const [value, onChange] = useState(new Date());\n    const formatShortWeekday = (locale, date) => ['S', 'M', 'T', 'W', 'T', 'F', 'S'][date.getDay()]\n    const tileContent = (date, view) => {\n        return (\n            <span className={'meter'}></span>)\n    }\n\n    return (\n        <Calendar\n            onChange={onChange}\n            value={value}\n            locale={'en-EN'}\n            formatShortWeekday={formatShortWeekday}\n            tileContent={tileContent}\n        />\n    )\n}\n\nexport default NewCalendar;\n\n"]},"metadata":{},"sourceType":"module"}