{"ast":null,"code":"import _slicedToArray from\"/home/alexeyko/Documents/React-tracker/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import s from'./Stopwatch.module.css';var Stopwatch=function Stopwatch(props){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),seconds=_useState2[0],setSecond=_useState2[1];// убрать отсюдова\nvar _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),minutes=_useState4[0],setMinute=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),hours=_useState6[0],setHour=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),isActive=_useState8[0],setIsActive=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),counter=_useState10[0],setCounter=_useState10[1];useEffect(function(){var intervalId;if(isActive){intervalId=setInterval(function(){setSecond(counter);if(minutes===60){setHour(hours+1);setMinute(0);}if(seconds===60){setMinute(minutes+1);setSecond(0);setCounter(0);}setCounter(function(counter){return counter+1;});props.setStopwatchTime(counter);},1000);}return function(){return clearInterval(intervalId);};},[isActive,counter]);var stopwatchTime={hours:hours>=10?hours:'0'+hours,minutes:minutes>=10?minutes:'0'+minutes,seconds:seconds>=10?seconds:'0'+seconds};return/*#__PURE__*/React.createElement(\"div\",{className:s.container},/*#__PURE__*/React.createElement(\"div\",{className:s.stopwatch},stopwatchTime.hours,\":\",stopwatchTime.minutes,\":\",stopwatchTime.seconds),/*#__PURE__*/React.createElement(\"div\",{className:s.buttons},/*#__PURE__*/React.createElement(\"button\",{className:\"\".concat(s.button,\" \").concat(s.stopBtn),onClick:props.toggleSlider}),/*#__PURE__*/React.createElement(\"button\",{className:\"\".concat(s.button,\" \").concat(s.pauseBtn),onClick:function onClick(){setIsActive(!isActive);}})));};export default Stopwatch;","map":{"version":3,"sources":["/home/alexeyko/Documents/React-tracker/src/components/Main/Tracker/TimerNew/Stopwatch/Stopwatch.jsx"],"names":["React","useEffect","useState","s","Stopwatch","props","seconds","setSecond","minutes","setMinute","hours","setHour","isActive","setIsActive","counter","setCounter","intervalId","setInterval","setStopwatchTime","clearInterval","stopwatchTime","container","stopwatch","buttons","button","stopBtn","toggleSlider","pauseBtn"],"mappings":"yHAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,MAAOC,CAAAA,CAAP,KAAc,wBAAd,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,eACIH,QAAQ,CAAC,CAAD,CADZ,wCAClBI,OADkB,eACTC,SADS,eACiB;AADjB,eAEIL,QAAQ,CAAC,CAAD,CAFZ,yCAElBM,OAFkB,eAETC,SAFS,8BAGAP,QAAQ,CAAC,CAAD,CAHR,yCAGlBQ,KAHkB,eAGXC,OAHW,8BAIOT,QAAQ,CAAC,IAAD,CAJf,yCAIlBU,QAJkB,eAIRC,WAJQ,8BAKKX,QAAQ,CAAC,CAAD,CALb,0CAKlBY,OALkB,gBAKTC,UALS,gBAOzBd,SAAS,CAAC,UAAM,CACZ,GAAIe,CAAAA,UAAJ,CAEA,GAAIJ,QAAJ,CAAc,CACVI,UAAU,CAAGC,WAAW,CAAC,UAAM,CAC3BV,SAAS,CAACO,OAAD,CAAT,CACA,GAAIN,OAAO,GAAK,EAAhB,CAAoB,CAChBG,OAAO,CAACD,KAAK,CAAG,CAAT,CAAP,CACAD,SAAS,CAAC,CAAD,CAAT,CACH,CACD,GAAIH,OAAO,GAAK,EAAhB,CAAoB,CAChBG,SAAS,CAACD,OAAO,CAAG,CAAX,CAAT,CACAD,SAAS,CAAC,CAAD,CAAT,CACAQ,UAAU,CAAC,CAAD,CAAV,CACH,CACDA,UAAU,CAAC,SAACD,OAAD,QAAaA,CAAAA,OAAO,CAAG,CAAvB,EAAD,CAAV,CACAT,KAAK,CAACa,gBAAN,CAAuBJ,OAAvB,EACH,CAbuB,CAarB,IAbqB,CAAxB,CAcH,CAED,MAAO,kBAAMK,CAAAA,aAAa,CAACH,UAAD,CAAnB,EAAP,CACH,CArBQ,CAqBN,CAACJ,QAAD,CAAWE,OAAX,CArBM,CAAT,CAuBA,GAAIM,CAAAA,aAAa,CAAG,CAChBV,KAAK,CAAGA,KAAK,EAAI,EAAV,CAAgBA,KAAhB,CAAwB,IAAMA,KADrB,CAEhBF,OAAO,CAAGA,OAAO,EAAI,EAAZ,CAAkBA,OAAlB,CAA4B,IAAMA,OAF3B,CAGhBF,OAAO,CAAGA,OAAO,EAAI,EAAZ,CAAkBA,OAAlB,CAA4B,IAAMA,OAH3B,CAApB,CAMA,mBACI,2BAAK,SAAS,CAAEH,CAAC,CAACkB,SAAlB,eACI,2BAAK,SAAS,CAAElB,CAAC,CAACmB,SAAlB,EACKF,aAAa,CAACV,KADnB,KAC2BU,aAAa,CAACZ,OADzC,KACmDY,aAAa,CAACd,OADjE,CADJ,cAII,2BAAK,SAAS,CAAEH,CAAC,CAACoB,OAAlB,eACI,8BAAQ,SAAS,WAAKpB,CAAC,CAACqB,MAAP,aAAiBrB,CAAC,CAACsB,OAAnB,CAAjB,CAA+C,OAAO,CAAEpB,KAAK,CAACqB,YAA9D,EADJ,cAEI,8BAAQ,SAAS,WAAKvB,CAAC,CAACqB,MAAP,aAAiBrB,CAAC,CAACwB,QAAnB,CAAjB,CAAgD,OAAO,CAAE,kBAAM,CAC3Dd,WAAW,CAAC,CAACD,QAAF,CAAX,CACH,CAFD,EAFJ,CAJJ,CADJ,CAaH,CAjDD,CAmDA,cAAeR,CAAAA,SAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport s from './Stopwatch.module.css';\n\nconst Stopwatch = (props) => {\n    const [seconds, setSecond] = useState(0); // убрать отсюдова\n    const [minutes, setMinute] = useState(0);\n    const [hours, setHour] = useState(0);\n    const [isActive, setIsActive] = useState(true);\n    const [counter, setCounter] = useState(0);\n\n    useEffect(() => {\n        let intervalId;\n\n        if (isActive) {\n            intervalId = setInterval(() => {\n                setSecond(counter);\n                if (minutes === 60) {\n                    setHour(hours + 1);\n                    setMinute(0);\n                }\n                if (seconds === 60) {\n                    setMinute(minutes + 1);\n                    setSecond(0);\n                    setCounter(0);\n                }\n                setCounter((counter) => counter + 1);\n                props.setStopwatchTime(counter);\n            }, 1000);\n        }\n\n        return () => clearInterval(intervalId);\n    }, [isActive, counter]);\n\n    let stopwatchTime = {\n        hours: (hours >= 10) ? hours : '0' + hours,\n        minutes: (minutes >= 10) ? minutes : '0' + minutes,\n        seconds: (seconds >= 10) ? seconds : '0' + seconds\n    }\n\n    return (\n        <div className={s.container}>\n            <div className={s.stopwatch}>\n                {stopwatchTime.hours}:{stopwatchTime.minutes}:{stopwatchTime.seconds}\n            </div>\n            <div className={s.buttons}>\n                <button className={`${s.button} ${s.stopBtn}`} onClick={props.toggleSlider}/>\n                <button className={`${s.button} ${s.pauseBtn}`} onClick={() => {\n                    setIsActive(!isActive)\n                }}/>\n            </div>\n        </div>\n    );\n};\n\nexport default Stopwatch;\n"]},"metadata":{},"sourceType":"module"}