{"ast":null,"code":"var _jsxFileName = \"/home/alexeyko/Documents/React-tracker/src/components/Main/Tracker/TimerNew/TimerNew.jsx\";\nimport React, { useState } from 'react';\nimport s from './TimerNew.module.css';\nimport { Field, reduxForm } from \"redux-form\";\nimport { Input } from \"../../../../common/Forms/FormsControl\";\nimport Stopwatch from \"./Stopwatch/Stopwatch\";\nimport TimeSlider from \"../TimeSlider/TimeSlider\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { submitForm } from \"../../../../store/reducers/issuesReducer\";\n\nconst TimerNew = props => {\n  const [onSlider, setonSlider] = useState(false);\n  const [stopwatchTime, setStopwatchTime] = useState(0);\n  const [sliderValue, setSliderValue] = useState([540, 690]);\n  const dispatch = useDispatch();\n  const initialLabel = useSelector(state => state.issuesList.initialLabel);\n  const initialName = useSelector(state => state.issuesList.initialName);\n  let initalValues = {\n    label: initialLabel,\n    issue: initialName\n  };\n\n  const toggleSlider = () => {\n    setonSlider(!onSlider);\n  };\n\n  let onSubmitForm = data => {\n    dispatch(submitForm(stopwatchTime, sliderValue, data.label, data.issue));\n    setStopwatchTime(0);\n    setSliderValue([540, 690]);\n    setOnTimer(false);\n    setonSlider(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, onTimer || initialLabel ? null : /*#__PURE__*/React.createElement(\"div\", {\n    className: s.newWorklog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: s.appendWorklog,\n    onClick: toggleTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: s.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"NEW WORKLOG\")), onTimer || initialLabel ? /*#__PURE__*/React.createElement(\"div\", {\n    className: s.timerOn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 40\n    }\n  }, /*#__PURE__*/React.createElement(IssueForm, {\n    initialValues: initalValues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Stopwatch, {\n    toggleSlider: toggleSlider,\n    stopwatchTime: stopwatchTime,\n    setStopwatchTime: setStopwatchTime,\n    isActive: onTimer,\n    toggleTimer: toggleTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }), onSlider ? /*#__PURE__*/React.createElement(TimeSlider, {\n    onSubmit: onSubmitForm,\n    sliderValue: sliderValue,\n    setSliderValue: setSliderValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }) : null) : null);\n};\n\nlet IssueForm = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: 'label',\n    component: Input,\n    placeholder: 'New Label',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: 'issue',\n    component: Input,\n    placeholder: 'New Issue',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  })));\n};\n\nIssueForm = reduxForm({\n  form: 'issueForm'\n})(IssueForm);\nexport default TimerNew;","map":{"version":3,"sources":["/home/alexeyko/Documents/React-tracker/src/components/Main/Tracker/TimerNew/TimerNew.jsx"],"names":["React","useState","s","Field","reduxForm","Input","Stopwatch","TimeSlider","useDispatch","useSelector","submitForm","TimerNew","props","onSlider","setonSlider","stopwatchTime","setStopwatchTime","sliderValue","setSliderValue","dispatch","initialLabel","state","issuesList","initialName","initalValues","label","issue","toggleSlider","onSubmitForm","data","setOnTimer","onTimer","newWorklog","appendWorklog","toggleTimer","timerOn","IssueForm","form"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport s from './TimerNew.module.css';\nimport {Field, reduxForm} from \"redux-form\";\nimport {Input} from \"../../../../common/Forms/FormsControl\";\nimport Stopwatch from \"./Stopwatch/Stopwatch\";\nimport TimeSlider from \"../TimeSlider/TimeSlider\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {submitForm} from \"../../../../store/reducers/issuesReducer\";\n\nconst TimerNew = (props) => {\n\n    const [onSlider, setonSlider] = useState(false);\n    const [stopwatchTime, setStopwatchTime] = useState(0);\n    const [sliderValue, setSliderValue] = useState([540, 690]);\n    const dispatch = useDispatch();\n    const initialLabel = useSelector(state => state.issuesList.initialLabel);\n    const initialName = useSelector(state => state.issuesList.initialName);\n    let initalValues = {\n        label: initialLabel,\n        issue: initialName\n    }\n\n    const toggleSlider = () => {\n        setonSlider(!onSlider);\n    };\n\n    let onSubmitForm = (data) => {\n        dispatch(submitForm(stopwatchTime, sliderValue, data.label, data.issue));\n        setStopwatchTime(0);\n        setSliderValue([540, 690]);\n        setOnTimer(false);\n        setonSlider(false);\n    }\n\n\n    return (\n        <div>\n            {onTimer || initialLabel? null :\n                <div className={s.newWorklog}>\n                    <button className={s.appendWorklog} onClick={toggleTimer}/>\n                    <p className={s.label}>NEW WORKLOG</p>\n                </div>}\n            {onTimer || initialLabel ? <div className={s.timerOn}>\n                <IssueForm initialValues={initalValues}/>\n                <Stopwatch toggleSlider={toggleSlider} stopwatchTime={stopwatchTime} setStopwatchTime={setStopwatchTime} isActive={onTimer} toggleTimer={toggleTimer}/>\n                {onSlider ? <TimeSlider onSubmit={onSubmitForm} sliderValue={sliderValue} setSliderValue={setSliderValue}/>: null}\n            </div> : null}\n        </div>\n    )\n};\n\nlet IssueForm = (props) => {\n    return (\n        <div>\n            <form>\n                <Field name={'label'} component={Input} placeholder={'New Label'}/>\n                <Field name={'issue'} component={Input} placeholder={'New Issue'}/>\n            </form>\n        </div>\n    )\n}\n\nIssueForm = reduxForm(\n    {\n        form: 'issueForm'\n    }\n)(IssueForm);\n\nexport default TimerNew;\n\n"]},"metadata":{},"sourceType":"module"}