{"ast":null,"code":"var _jsxFileName = \"/home/alexeyko/Documents/React-tracker/src/components/Main/DateSorting/Calendar/NewCalendar.jsx\";\nimport React, { Component, useState } from \"react\";\nimport { Calendar } from \"react-calendar\";\nimport 'react-calendar/dist/Calendar.css';\nimport s from \"./Calendar.module.css\";\nimport './Calendar.scss';\nimport calendarLogo from \"../../../../img/calendar.svg\";\nimport store from \"../../../../store/configureStore\";\n\nconst NewCalendar = () => {\n  const formatShortWeekday = (locale, date) => ['S', 'M', 'T', 'W', 'T', 'F', 'S'][date.getDay()];\n\n  const [value, onChange] = useState(new Date());\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Calendar, {\n    onChange: onChange,\n    value: value,\n    locale: 'en-EN',\n    formatShortWeekday: formatShortWeekday,\n    tileContent: (date, view) => /*#__PURE__*/React.createElement(\"span\", {\n      className: 'meter',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 42\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default NewCalendar; // export default class CalendarShow extends Component {\n//     getinitialState() {\n//         return {\n//             nowDate: store.getState().date.day,\n//             date: new Date()\n//         }\n//     }\n//\n//     initialState = this.getinitialState();\n//\n//     state = {\n//         ...this.initialState,\n//         on: false\n//     }\n//\n//     onChange = date => this.setState({date})\n//\n//     toggle = () => {\n//         this.setState({\n//             on: !this.state.on\n//         })\n//     }\n//\n//     formatShortWeekday = (locale, date) => ['S', 'M', 'T', 'W', 'T', 'F', 'S'][date.getDay()]\n//\n//     render() {\n//         return (\n//             <div>\n//                 <div className={s.data}>\n//                     <button className={s.changeData} onClick={this.toggle}>{this.state.nowDate}</button>\n//                     <img src={calendarLogo} alt='calendar'/>\n//                 </div>\n//                 <div className={s.calendar}>{this.state.on &&\n//                 <Calendar className={'react-calendar'} onChange={this.onChange} value={this.state.date} locale={'en-EN'}\n//                           formatShortWeekday={this.formatShortWeekday}\n//                           tileContent={(date, view) => <span className={'meter'}></span>}/>}\n//                 </div>\n//             </div>\n//         )\n//     }\n// }","map":{"version":3,"sources":["/home/alexeyko/Documents/React-tracker/src/components/Main/DateSorting/Calendar/NewCalendar.jsx"],"names":["React","Component","useState","Calendar","s","store","NewCalendar","formatShortWeekday","locale","date","getDay","value","onChange","Date","view"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,OAAO,kCAAP;AACA,OAAOC,CAAP,MAAc,uBAAd;AACA,OAAO,iBAAP;;AAEA,OAAOC,KAAP,MAAkB,kCAAlB;;AAGA,MAAMC,WAAW,GAAG,MAAM;AACvB,QAAOC,kBAAkB,GAAG,CAACC,MAAD,EAASC,IAAT,KAAkB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoCA,IAAI,CAACC,MAAL,EAApC,CAA9C;;AACC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAIW,IAAJ,EAAD,CAAlC;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AACA,IAAA,QAAQ,EAAED,QADV;AAEA,IAAA,KAAK,EAAED,KAFP;AAGA,IAAA,MAAM,EAAE,OAHR;AAIA,IAAA,kBAAkB,EAAEJ,kBAJpB;AAKA,IAAA,WAAW,EAAE,CAACE,IAAD,EAAOK,IAAP,kBAAgB;AAAM,MAAA,SAAS,EAAE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAWH,CAdD;;AAgBA,eAAeR,WAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {Component, useState} from \"react\";\nimport {Calendar} from \"react-calendar\";\nimport 'react-calendar/dist/Calendar.css'\nimport s from \"./Calendar.module.css\";\nimport './Calendar.scss'\nimport calendarLogo from \"../../../../img/calendar.svg\";\nimport store from \"../../../../store/configureStore\";\n\n\nconst NewCalendar = () => {\n   const  formatShortWeekday = (locale, date) => ['S', 'M', 'T', 'W', 'T', 'F', 'S'][date.getDay()]\n    const [value, onChange] = useState(new Date());\n    return (\n        <div>\n            <Calendar\n            onChange={onChange}\n            value={value}\n            locale={'en-EN'}\n            formatShortWeekday={formatShortWeekday}\n            tileContent={(date, view) => <span className={'meter'}></span>}\n            />\n        </div>\n    )\n}\n\nexport default NewCalendar;\n\n// export default class CalendarShow extends Component {\n//     getinitialState() {\n//         return {\n//             nowDate: store.getState().date.day,\n//             date: new Date()\n//         }\n//     }\n//\n//     initialState = this.getinitialState();\n//\n//     state = {\n//         ...this.initialState,\n//         on: false\n//     }\n//\n//     onChange = date => this.setState({date})\n//\n//     toggle = () => {\n//         this.setState({\n//             on: !this.state.on\n//         })\n//     }\n//\n//     formatShortWeekday = (locale, date) => ['S', 'M', 'T', 'W', 'T', 'F', 'S'][date.getDay()]\n//\n//     render() {\n//         return (\n//             <div>\n//                 <div className={s.data}>\n//                     <button className={s.changeData} onClick={this.toggle}>{this.state.nowDate}</button>\n//                     <img src={calendarLogo} alt='calendar'/>\n//                 </div>\n//                 <div className={s.calendar}>{this.state.on &&\n//                 <Calendar className={'react-calendar'} onChange={this.onChange} value={this.state.date} locale={'en-EN'}\n//                           formatShortWeekday={this.formatShortWeekday}\n//                           tileContent={(date, view) => <span className={'meter'}></span>}/>}\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n\n"]},"metadata":{},"sourceType":"module"}