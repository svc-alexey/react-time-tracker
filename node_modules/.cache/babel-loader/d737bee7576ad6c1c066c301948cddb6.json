{"ast":null,"code":"var _jsxFileName = \"/home/alexeyko/Documents/React-tracker/src/components/Main/Tracker/TimerNew/Stopwatch/Stopwatch.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport s from './Stopwatch.module.css';\n\nconst Stopwatch = () => {\n  const [seconds, setSecond] = useState(0);\n  const [minutes, setMinute] = useState(0);\n  const [hours, setHour] = useState(0);\n  const [isActive, setIsActive] = useState(true);\n  const [counter, setCounter] = useState(0);\n  const [stateCounter, setStateCounter] = useState(0);\n  useEffect(() => {\n    let intervalId;\n\n    if (isActive) {\n      intervalId = setInterval(() => {\n        setSecond(counter);\n\n        if (minutes === 60) {\n          setHour(hours + 1);\n          setMinute(0);\n        }\n\n        if (seconds === 60) {\n          setMinute(minutes + 1);\n          setSecond(0);\n          setCounter(0);\n        }\n\n        setCounter(counter => counter + 1);\n        setStateCounter(stateCounter => stateCounter + 1);\n      }, 1000);\n    }\n\n    return () => clearInterval(intervalId);\n  }, [isActive, counter]);\n  let stopwatchTime = {\n    hours: hours >= 10 ? hours : '0' + hours,\n    minutes: minutes >= 10 ? minutes : '0' + minutes,\n    seconds: seconds >= 10 ? seconds : '0' + seconds\n  };\n\n  function stopTimer() {\n    setIsActive(false);\n    setCounter(0);\n    setStateCounter(0);\n    setSecond(0);\n    setMinute(0);\n    setHour(0);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: s.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.stopwatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, stopwatchTime.hours, \":\", stopwatchTime.minutes, \":\", stopwatchTime.seconds), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: `${s.button} ${s.stopBtn}`,\n    onClick: toggleSlider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: `${s.button} ${s.pauseBtn}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Stopwatch;","map":{"version":3,"sources":["/home/alexeyko/Documents/React-tracker/src/components/Main/Tracker/TimerNew/Stopwatch/Stopwatch.jsx"],"names":["React","useEffect","useState","s","Stopwatch","seconds","setSecond","minutes","setMinute","hours","setHour","isActive","setIsActive","counter","setCounter","stateCounter","setStateCounter","intervalId","setInterval","clearInterval","stopwatchTime","stopTimer","container","stopwatch","buttons","button","stopBtn","toggleSlider","pauseBtn"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport s from './Stopwatch.module.css';\n\nconst Stopwatch = () => {\n    const [seconds, setSecond] = useState(0);\n    const [minutes, setMinute] = useState(0);\n    const [hours, setHour] = useState(0);\n    const [isActive, setIsActive] = useState(true);\n    const [counter, setCounter] = useState(0);\n    const [stateCounter, setStateCounter] = useState(0);\n\n    useEffect(() => {\n        let intervalId;\n\n        if (isActive) {\n            intervalId = setInterval(() => {\n                setSecond(counter);\n                if (minutes === 60) {\n                    setHour(hours + 1);\n                    setMinute(0);\n                }\n                if (seconds === 60) {\n                    setMinute(minutes + 1);\n                    setSecond(0);\n                    setCounter(0);\n                }\n                setCounter((counter) => counter + 1);\n                setStateCounter((stateCounter) => stateCounter + 1);\n            }, 1000);\n        }\n\n        return () => clearInterval(intervalId);\n    }, [isActive, counter]);\n\n    let stopwatchTime = {\n        hours: (hours >= 10) ? hours : '0' + hours,\n        minutes: (minutes >= 10) ? minutes : '0' + minutes,\n        seconds: (seconds >= 10) ? seconds : '0' + seconds\n    }\n\n    function stopTimer() {\n        setIsActive(false);\n        setCounter(0);\n        setStateCounter(0);\n        setSecond(0);\n        setMinute(0);\n        setHour(0);\n    }\n\n    return (\n        <div className={s.container}>\n            <div className={s.stopwatch}>\n                {stopwatchTime.hours}:{stopwatchTime.minutes}:{stopwatchTime.seconds}\n            </div>\n            <div className={s.buttons}>\n                <button className={`${s.button} ${s.stopBtn}`} onClick={toggleSlider}/>\n                <button className={`${s.button} ${s.pauseBtn}`}/>\n            </div>\n        </div>\n    );\n};\n\nexport default Stopwatch;\n"]},"metadata":{},"sourceType":"module"}