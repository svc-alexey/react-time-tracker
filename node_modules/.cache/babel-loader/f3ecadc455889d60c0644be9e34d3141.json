{"ast":null,"code":"import _slicedToArray from\"/home/alexeyko/Documents/React-tracker/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import s from'./Sync.module.css';import calendarLogo from\"../../../../img/calendar.svg\";import SyncIssue from'../SyncIssue/SyncIssue';var Sync=function Sync(props){var syncIssuesElements=props.syncIssuesList.map(function(issues){return/*#__PURE__*/React.createElement(SyncIssue,{color:issues.color,label:issues.label,time:issues.time,key:issues.id,id:issues.id});});var _useState=useState(false),_useState2=_slicedToArray(_useState,2),on=_useState2[0],setOn=_useState2[1];var sync=function sync(){setOn(!on);};return/*#__PURE__*/React.createElement(\"div\",{className:s.sync},/*#__PURE__*/React.createElement(\"div\",{className:s.items},/*#__PURE__*/React.createElement(\"div\",{className:s.header},\"Google calendar sync\"),/*#__PURE__*/React.createElement(\"button\",{className:on?s.switchBtnActive:s.switchBtn,onClick:sync}),/*#__PURE__*/React.createElement(\"img\",{src:calendarLogo,alt:\"calendar\"})),/*#__PURE__*/React.createElement(\"div\",{className:s.issues},on?syncIssuesElements:false));};export default Sync;","map":{"version":3,"sources":["/home/alexeyko/Documents/React-tracker/src/components/Main/Tracker/Sync/Sync.jsx"],"names":["React","useState","s","SyncIssue","Sync","props","syncIssuesElements","syncIssuesList","map","issues","color","label","time","id","on","setOn","sync","items","header","switchBtnActive","switchBtn","calendarLogo"],"mappings":"yHAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAOC,CAAAA,CAAP,KAAc,mBAAd,C,uDAEA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CAGA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,KAAD,CAAW,CACpB,GAAIC,CAAAA,kBAAkB,CAAGD,KAAK,CAACE,cAAN,CAAqBC,GAArB,CAAyB,SAAAC,MAAM,qBAAI,oBAAC,SAAD,EAAW,KAAK,CAAEA,MAAM,CAACC,KAAzB,CAAgC,KAAK,CAAED,MAAM,CAACE,KAA9C,CAAqD,IAAI,CAAEF,MAAM,CAACG,IAAlE,CAAwE,GAAG,CAAEH,MAAM,CAACI,EAApF,CAAwF,EAAE,CAAEJ,MAAM,CAACI,EAAnG,EAAJ,EAA/B,CAAzB,CADoB,cAGAZ,QAAQ,CAAC,KAAD,CAHR,wCAGba,EAHa,eAGTC,KAHS,eAKpB,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CACfD,KAAK,CAAC,CAACD,EAAF,CAAL,CACH,CAFD,CAIF,mBACE,2BAAK,SAAS,CAAEZ,CAAC,CAACc,IAAlB,eACE,2BAAK,SAAS,CAAEd,CAAC,CAACe,KAAlB,eACE,2BAAK,SAAS,CAAEf,CAAC,CAACgB,MAAlB,yBADF,cAIE,8BAAQ,SAAS,CAAEJ,EAAE,CAAGZ,CAAC,CAACiB,eAAL,CAAuBjB,CAAC,CAACkB,SAA9C,CAAyD,OAAO,CAAEJ,IAAlE,EAJF,cAKE,2BAAK,GAAG,CAAEK,YAAV,CAAwB,GAAG,CAAC,UAA5B,EALF,CADF,cAQE,2BAAK,SAAS,CAAEnB,CAAC,CAACO,MAAlB,EACKK,EAAE,CAAGR,kBAAH,CAAwB,KAD/B,CARF,CADF,CAcD,CAvBD,CAyBA,cAAeF,CAAAA,IAAf","sourcesContent":["import React, {useState} from 'react';\nimport s from './Sync.module.css';\nimport calendarLogo from '../../../../img/calendar.svg';\nimport SyncIssue from '../SyncIssue/SyncIssue';\n\n\nconst Sync = (props) => {\n    let syncIssuesElements = props.syncIssuesList.map(issues => <SyncIssue color={issues.color} label={issues.label} time={issues.time} key={issues.id} id={issues.id}/>);\n\n    const [on, setOn] = useState(false);\n\n    const sync = () => {\n        setOn(!on)\n    }\n\n  return (\n    <div className={s.sync}>\n      <div className={s.items}>\n        <div className={s.header}>\n          Google calendar sync\n        </div>\n        <button className={on ? s.switchBtnActive : s.switchBtn} onClick={sync}></button>\n        <img src={calendarLogo} alt='calendar'></img>\n      </div>\n      <div className={s.issues}>\n          {on ? syncIssuesElements : false}\n      </div>\n    </div >\n  );\n}\n\nexport default Sync;\n"]},"metadata":{},"sourceType":"module"}