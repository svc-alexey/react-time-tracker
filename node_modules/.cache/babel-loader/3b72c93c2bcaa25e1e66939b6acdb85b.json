{"ast":null,"code":"var _jsxFileName = \"/home/alexeyko/Documents/React-tracker/src/components/Main/Tracker/Timer/Timer.jsx\";\nimport React, { useState } from 'react';\nimport s from './Timer.module.css';\nimport TimeSlider from \"../TimeSlider/TimeSlider\";\nimport { updateWorklog } from \"../../../../store/reducers/issuesReducer\";\nimport { useDispatch } from \"react-redux\";\n\nconst Timer = () => {\n  const [on, setOn] = useState(false);\n  const [time, setTime] = useState({\n    ms: 0,\n    s: 0,\n    m: 0,\n    h: 0\n  });\n  const [interv, setInterv] = useState();\n  const [play, setPlay] = useState(true);\n\n  const toggle = () => {\n    setOn(!on);\n  };\n\n  const start = () => {\n    run();\n    setInterv(setInterval(run, 10));\n    toggle();\n  };\n\n  const reset = () => {\n    setPlay(!play);\n  };\n\n  const resume = () => {\n    run();\n    setInterv(setInterval(run, 10));\n  };\n\n  let updatedMs = time.ms,\n      updatedS = time.s,\n      updatedM = time.m,\n      updatedH = time.h;\n\n  const run = () => {\n    if (updatedM === 60) {\n      updatedH++;\n      updatedM = 0;\n    }\n\n    if (updatedS === 60) {\n      updatedM++;\n      updatedS = 0;\n    }\n\n    if (updatedMs === 100) {\n      updatedS++;\n      updatedMs = 0;\n    }\n\n    updatedMs++;\n    return setTime({\n      ms: updatedMs,\n      s: updatedS,\n      m: updatedM,\n      h: updatedH\n    });\n  };\n\n  let stopwatchTime = {\n    hours: time.h >= 10 ? time.h : '0' + time.h,\n    minutes: time.m >= 10 ? time.m : '0' + time.m,\n    seconds: time.s >= 10 ? time.s : '0' + time.s\n  };\n\n  const pause = () => {\n    clearInterval(interv);\n    reset();\n    if (!play) resume();\n  };\n\n  const stop = () => {\n    clearInterval(interv);\n    setWorklog(!worklog);\n  };\n\n  const [worklog, setWorklog] = useState(false);\n\n  const showWorklog = () => {\n    setTime({\n      ms: 0,\n      s: 0,\n      m: 0,\n      h: 0\n    });\n    setWorklog(!worklog);\n    toggle();\n  };\n\n  const [label, setLabel] = useState('ADD LABEL');\n  const [name, setName] = useState('ADD ISSUE');\n\n  const handleChangeLabel = e => setLabel(e.target.value);\n\n  const handleChangeName = e => setName(e.target.value);\n\n  const dispatch = useDispatch();\n\n  const pushWorklog = () => {\n    dispatch(updateWorklog(label, name, stopwatchTime, value));\n    setLabel('ADD LABEL');\n    setName('ADD ISSUE');\n  };\n\n  const [value, setValue] = useState([9, 14]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: on ? 'none' : 'block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.newWorklog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: s.appendWorklog,\n    onClick: start,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: s.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \"NEW WORKLOG\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.timerOn,\n    style: {\n      display: on ? 'flex' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: s.issue,\n    type: \"text\",\n    value: name,\n    onChange: handleChangeName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: s.label,\n    type: \"text\",\n    value: label,\n    onChange: handleChangeLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.stopwatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, stopwatchTime.hours, \":\", stopwatchTime.minutes, \":\", stopwatchTime.seconds), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: `${s.button} ${s.stopBtn}`,\n    onClick: stop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: `${s.button} ${s.pauseBtn}`,\n    onClick: pause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }))), worklog ? /*#__PURE__*/React.createElement(TimeSlider, {\n    value: value,\n    setValue: setValue,\n    showWorklog: showWorklog,\n    pushWorklog: pushWorklog,\n    label: label,\n    name: name,\n    handleChangeLabel: handleChangeLabel,\n    handleChangeName: handleChangeName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 18\n    }\n  }) : null);\n};\n\nexport default Timer;","map":{"version":3,"sources":["/home/alexeyko/Documents/React-tracker/src/components/Main/Tracker/Timer/Timer.jsx"],"names":["React","useState","s","TimeSlider","updateWorklog","useDispatch","Timer","on","setOn","time","setTime","ms","m","h","interv","setInterv","play","setPlay","toggle","start","run","setInterval","reset","resume","updatedMs","updatedS","updatedM","updatedH","stopwatchTime","hours","minutes","seconds","pause","clearInterval","stop","setWorklog","worklog","showWorklog","label","setLabel","name","setName","handleChangeLabel","e","target","value","handleChangeName","dispatch","pushWorklog","setValue","display","newWorklog","appendWorklog","timerOn","issue","stopwatch","buttons","button","stopBtn","pauseBtn"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport s from './Timer.module.css';\nimport TimeSlider from \"../TimeSlider/TimeSlider\";\nimport { updateWorklog } from \"../../../../store/reducers/issuesReducer\";\nimport { useDispatch, } from \"react-redux\";\n\nconst Timer = () => {\n  const [on, setOn] = useState(false);\n  const [time, setTime] = useState({ ms: 0, s: 0, m: 0, h: 0 });\n  const [interv, setInterv] = useState();\n  const [play, setPlay] = useState(true);\n\n  const toggle = () => {\n    setOn(!on)\n  }\n\n  const start = () => {\n    run();\n    setInterv(setInterval(run, 10));\n    toggle();\n  };\n\n  const reset = () => {\n    setPlay(!play);\n  };\n\n  const resume = () => {\n    run();\n    setInterv(setInterval(run, 10));\n  };\n\n  let updatedMs = time.ms, updatedS = time.s, updatedM = time.m, updatedH = time.h;\n\n  const run = () => {\n    if (updatedM === 60) {\n      updatedH++;\n      updatedM = 0;\n    }\n    if (updatedS === 60) {\n      updatedM++;\n      updatedS = 0;\n    }\n    if (updatedMs === 100) {\n      updatedS++;\n      updatedMs = 0;\n    }\n    updatedMs++;\n    return setTime({ ms: updatedMs, s: updatedS, m: updatedM, h: updatedH });\n  };\n\n\n  let stopwatchTime = {\n    hours: (time.h >= 10) ? time.h : '0' + time.h,\n    minutes: (time.m >= 10) ? time.m : '0' + time.m,\n    seconds: (time.s >= 10) ? time.s : '0' + time.s\n  }\n\n  const pause = () => {\n    clearInterval(interv);\n    reset();\n    if (!play) resume();\n  };\n\n  const stop = () => {\n    clearInterval(interv);\n    setWorklog(!worklog)\n  };\n\n  const [worklog, setWorklog] = useState(false);\n\n  const showWorklog = () => {\n    setTime({ ms: 0, s: 0, m: 0, h: 0 });\n    setWorklog(!worklog);\n    toggle();\n  }\n\n\n  const [label, setLabel] = useState('ADD LABEL');\n  const [name, setName] = useState('ADD ISSUE');\n\n  const handleChangeLabel = (e) => setLabel(e.target.value);\n  const handleChangeName = (e) => setName(e.target.value);\n\n  const dispatch = useDispatch();\n\n  const pushWorklog = () => {\n    dispatch(updateWorklog(label, name, stopwatchTime, value));\n    setLabel('ADD LABEL');\n    setName('ADD ISSUE');\n  }\n\n  const [value, setValue] = useState([9, 14]);\n\n\n  return (\n    <div>\n      <div style={{ display: on ? 'none' : 'block' }}>\n        <div className={s.newWorklog}>\n          <button className={s.appendWorklog} onClick={start} />\n          <p className={s.label}>NEW WORKLOG</p>\n        </div>\n      </div>\n      <div className={s.timerOn} style={{ display: on ? 'flex' : 'none' }}>\n        <input className={s.issue} type=\"text\" value={name} onChange={handleChangeName} />\n        <input className={s.label} type=\"text\" value={label} onChange={handleChangeLabel} />\n        <div\n          className={s.stopwatch}>{stopwatchTime.hours}:{stopwatchTime.minutes}:{stopwatchTime.seconds}</div>\n        <div className={s.buttons}>\n          <button className={`${s.button} ${s.stopBtn}`} onClick={stop} />\n          <button className={`${s.button} ${s.pauseBtn}`} onClick={pause} />\n        </div>\n      </div>\n      {worklog ? <TimeSlider value={value} setValue={setValue} showWorklog={showWorklog} pushWorklog={pushWorklog} label={label} name={name} handleChangeLabel={handleChangeLabel} handleChangeName={handleChangeName} /> : null}\n    </div>\n  );\n}\n\nexport default Timer;\n\n"]},"metadata":{},"sourceType":"module"}