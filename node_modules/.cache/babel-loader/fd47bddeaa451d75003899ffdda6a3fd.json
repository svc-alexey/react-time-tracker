{"ast":null,"code":"var _jsxFileName = \"/home/alexeyko/Documents/React-tracker/src/components/Main/Tracker/Timer/Timer.jsx\";\nimport React, { useState } from 'react';\nimport s from './Timer.module.css';\nimport TimeSlider from \"../TimeSlider/TimeSlider\";\nimport { updateWorklog } from \"../../../../store/reducers/issuesReducer\";\nimport { useDispatch } from \"react-redux\";\nimport RangeSlider from \"../TimeSlider/RangeSlider\";\n\nconst Timer = () => {\n  const [on, setOn] = useState(false);\n  const [time, setTime] = useState({\n    ms: 0,\n    s: 0,\n    m: 0,\n    h: 0\n  });\n  const [interv, setInterv] = useState();\n  const [play, setPlay] = useState(true);\n\n  const toggle = () => {\n    setOn(!on);\n  };\n\n  const start = () => {\n    run();\n    setInterv(setInterval(run, 10));\n    toggle();\n  };\n\n  const reset = () => {\n    setPlay(!play);\n  };\n\n  const resume = () => {\n    run();\n    setInterv(setInterval(run, 10));\n  };\n\n  let updatedMs = time.ms,\n      updatedS = time.s,\n      updatedM = time.m,\n      updatedH = time.h;\n\n  const run = () => {\n    if (updatedM === 60) {\n      updatedH++;\n      updatedM = 0;\n    }\n\n    if (updatedS === 60) {\n      updatedM++;\n      updatedS = 0;\n    }\n\n    if (updatedMs === 100) {\n      updatedS++;\n      updatedMs = 0;\n    }\n\n    updatedMs++;\n    return setTime({\n      ms: updatedMs,\n      s: updatedS,\n      m: updatedM,\n      h: updatedH\n    });\n  };\n\n  let stopwatchTime = {\n    hours: time.h >= 10 ? time.h : '0' + time.h,\n    minutes: time.m >= 10 ? time.m : '0' + time.m,\n    seconds: time.s >= 10 ? time.s : '0' + time.s\n  };\n\n  const pause = () => {\n    clearInterval(interv);\n    reset();\n    if (!play) resume();\n  };\n\n  const stop = () => {\n    clearInterval(interv);\n    setWorklog(!worklog);\n  };\n\n  const [worklog, setWorklog] = useState(false);\n\n  const showWorklog = () => {\n    setTime({\n      ms: 0,\n      s: 0,\n      m: 0,\n      h: 0\n    });\n    setWorklog(!worklog);\n    toggle();\n  };\n\n  const [label, setLabel] = useState('ADD LABEL');\n  const [name, setName] = useState('ADD ISSUE');\n\n  const handleChangeLabel = e => setLabel(e.target.value);\n\n  const handleChangeName = e => setName(e.target.value);\n\n  const dispatch = useDispatch();\n\n  const pushWorklog = () => {\n    dispatch(updateWorklog(label, name, stopwatchTime, value));\n    setLabel('ADD LABEL');\n    setName('ADD ISSUE');\n  };\n\n  const [value, setValue] = useState([9, 14]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: on ? 'none' : 'block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.newWorklog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: s.appendWorklog,\n    onClick: start,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: s.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, \"NEW WORKLOG\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.timerOn,\n    style: {\n      display: on ? 'flex' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: s.issue,\n    type: \"text\",\n    value: name,\n    onChange: handleChangeName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: s.label,\n    type: \"text\",\n    value: label,\n    onChange: handleChangeLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.stopwatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, stopwatchTime.hours, \":\", stopwatchTime.minutes, \":\", stopwatchTime.seconds), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: `${s.button} ${s.stopBtn}`,\n    onClick: stop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: `${s.button} ${s.pauseBtn}`,\n    onClick: pause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }))), worklog ? /*#__PURE__*/React.createElement(RangeSlider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }) : null);\n};\n\nexport default Timer; // <TimeSlider value={value} setValue={setValue} showWorklog={showWorklog} pushWorklog={pushWorklog} label={label} name={name} handleChangeLabel={handleChangeLabel} handleChangeName={handleChangeName} />","map":{"version":3,"sources":["/home/alexeyko/Documents/React-tracker/src/components/Main/Tracker/Timer/Timer.jsx"],"names":["React","useState","s","TimeSlider","updateWorklog","useDispatch","RangeSlider","Timer","on","setOn","time","setTime","ms","m","h","interv","setInterv","play","setPlay","toggle","start","run","setInterval","reset","resume","updatedMs","updatedS","updatedM","updatedH","stopwatchTime","hours","minutes","seconds","pause","clearInterval","stop","setWorklog","worklog","showWorklog","label","setLabel","name","setName","handleChangeLabel","e","target","value","handleChangeName","dispatch","pushWorklog","setValue","display","newWorklog","appendWorklog","timerOn","issue","stopwatch","buttons","button","stopBtn","pauseBtn"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport s from './Timer.module.css';\nimport TimeSlider from \"../TimeSlider/TimeSlider\";\nimport {updateWorklog} from \"../../../../store/reducers/issuesReducer\";\nimport {useDispatch,} from \"react-redux\";\nimport RangeSlider from \"../TimeSlider/RangeSlider\";\n\nconst Timer = () => {\n    const [on, setOn] = useState(false);\n    const [time, setTime] = useState({ms: 0, s: 0, m: 0, h: 0});\n    const [interv, setInterv] = useState();\n    const [play, setPlay] = useState(true);\n\n    const toggle = () => {\n        setOn(!on)\n    }\n\n    const start = () => {\n        run();\n        setInterv(setInterval(run, 10));\n        toggle();\n    };\n\n    const reset = () => {\n        setPlay(!play);\n    };\n\n    const resume = () => {\n        run();\n        setInterv(setInterval(run, 10));\n    };\n\n    let updatedMs = time.ms, updatedS = time.s, updatedM = time.m, updatedH = time.h;\n\n    const run = () => {\n        if (updatedM === 60) {\n            updatedH++;\n            updatedM = 0;\n        }\n        if (updatedS === 60) {\n            updatedM++;\n            updatedS = 0;\n        }\n        if (updatedMs === 100) {\n            updatedS++;\n            updatedMs = 0;\n        }\n        updatedMs++;\n        return setTime({ms: updatedMs, s: updatedS, m: updatedM, h: updatedH});\n    };\n\n\n    let stopwatchTime = {\n        hours: (time.h >= 10) ? time.h : '0' + time.h,\n        minutes: (time.m >= 10) ? time.m : '0' + time.m,\n        seconds: (time.s >= 10) ? time.s : '0' + time.s\n    }\n\n    const pause = () => {\n        clearInterval(interv);\n        reset();\n        if (!play) resume();\n    };\n\n    const stop = () => {\n        clearInterval(interv);\n        setWorklog(!worklog)\n    };\n\n    const [worklog, setWorklog] = useState(false);\n\n    const showWorklog = () => {\n        setTime({ms: 0, s: 0, m: 0, h: 0});\n        setWorklog(!worklog);\n        toggle();\n    }\n\n\n    const [label, setLabel] = useState('ADD LABEL');\n    const [name, setName] = useState('ADD ISSUE');\n\n    const handleChangeLabel = (e) => setLabel(e.target.value);\n    const handleChangeName = (e) => setName(e.target.value);\n\n    const dispatch = useDispatch();\n\n    const pushWorklog = () => {\n        dispatch(updateWorklog(label, name, stopwatchTime, value));\n        setLabel('ADD LABEL');\n        setName('ADD ISSUE');\n    }\n\n    const [value, setValue] = useState([9, 14]);\n\n\n    return (\n        <div>\n            <div style={{display: on ? 'none' : 'block'}}>\n                <div className={s.newWorklog}>\n                    <button className={s.appendWorklog} onClick={start}/>\n                    <p className={s.label}>NEW WORKLOG</p>\n                </div>\n            </div>\n            <div className={s.timerOn} style={{display: on ? 'flex' : 'none'}}>\n                <input className={s.issue} type=\"text\" value={name} onChange={handleChangeName}/>\n                <input className={s.label} type=\"text\" value={label} onChange={handleChangeLabel}/>\n                <div\n                    className={s.stopwatch}>{stopwatchTime.hours}:{stopwatchTime.minutes}:{stopwatchTime.seconds}</div>\n                <div className={s.buttons}>\n                    <button className={`${s.button} ${s.stopBtn}`} onClick={stop}/>\n                    <button className={`${s.button} ${s.pauseBtn}`} onClick={pause}/>\n                </div>\n            </div>\n            {worklog ?\n                <RangeSlider/> : null\n            }\n        </div>\n    );\n}\n\nexport default Timer;\n\n// <TimeSlider value={value} setValue={setValue} showWorklog={showWorklog} pushWorklog={pushWorklog} label={label} name={name} handleChangeLabel={handleChangeLabel} handleChangeName={handleChangeName} />"]},"metadata":{},"sourceType":"module"}