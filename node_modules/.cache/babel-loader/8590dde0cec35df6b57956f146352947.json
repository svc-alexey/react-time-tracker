{"ast":null,"code":"var _jsxFileName = \"/home/alexeyko/Documents/React-tracker/src/components/Main/Tracker/TimerNew/TimerNew.jsx\";\nimport React, { useState } from 'react';\nimport s from './TimerNew.module.css';\nimport { Field, reduxForm } from \"redux-form\";\nimport { Input } from \"../../../../common/Forms/FormsControl\";\nimport Stopwatch from \"./Stopwatch/Stopwatch\";\nimport TimeSlider from \"../TimeSlider/TimeSlider\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { submitForm } from \"../../../../store/reducers/issuesReducer\";\n\nconst TimerNew = props => {\n  const isActiveTimer = useSelector(state => state.issuesList.isActiveTimer);\n  const [onSlider, setonSlider] = useState(false);\n  const [stopwatchTime, setStopwatchTime] = useState(0);\n  const [sliderValue, setSliderValue] = useState([540, 690]);\n  const dispatch = useDispatch();\n  const initialLabel = useSelector(state => state.issuesList.initialLabel);\n  const initialName = useSelector(state => state.issuesList.initialName);\n  let initalValues = {\n    label: initialLabel,\n    issue: initialName\n  };\n\n  const toggleTimer = () => {\n    setOnTimer(!onTimer);\n  };\n\n  const toggleSlider = () => {\n    setonSlider(!onSlider);\n  };\n\n  let onSubmitForm = data => {\n    dispatch(submitForm(stopwatchTime, sliderValue, data.label, data.issue));\n    setStopwatchTime(0);\n    setSliderValue([540, 690]);\n    setOnTimer(false);\n    setonSlider(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, onTimer || initialLabel ? null : /*#__PURE__*/React.createElement(\"div\", {\n    className: s.newWorklog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: s.appendWorklog,\n    onClick: toggleTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: s.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"NEW WORKLOG\")), onTimer || initialLabel ? /*#__PURE__*/React.createElement(\"div\", {\n    className: s.timerOn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 40\n    }\n  }, /*#__PURE__*/React.createElement(IssueForm, {\n    initialValues: initalValues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Stopwatch, {\n    toggleSlider: toggleSlider,\n    stopwatchTime: stopwatchTime,\n    setStopwatchTime: setStopwatchTime,\n    isActive: isActiveTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), onSlider ? /*#__PURE__*/React.createElement(TimeSlider, {\n    onSubmit: onSubmitForm,\n    sliderValue: sliderValue,\n    setSliderValue: setSliderValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }) : null) : null);\n};\n\nlet IssueForm = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: 'label',\n    component: Input,\n    placeholder: 'New Label',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: 'issue',\n    component: Input,\n    placeholder: 'New Issue',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  })));\n};\n\nIssueForm = reduxForm({\n  form: 'issueForm'\n})(IssueForm);\nexport default TimerNew;","map":{"version":3,"sources":["/home/alexeyko/Documents/React-tracker/src/components/Main/Tracker/TimerNew/TimerNew.jsx"],"names":["React","useState","s","Field","reduxForm","Input","Stopwatch","TimeSlider","useDispatch","useSelector","submitForm","TimerNew","props","isActiveTimer","state","issuesList","onSlider","setonSlider","stopwatchTime","setStopwatchTime","sliderValue","setSliderValue","dispatch","initialLabel","initialName","initalValues","label","issue","toggleTimer","setOnTimer","onTimer","toggleSlider","onSubmitForm","data","newWorklog","appendWorklog","timerOn","IssueForm","form"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport s from './TimerNew.module.css';\nimport {Field, reduxForm} from \"redux-form\";\nimport {Input} from \"../../../../common/Forms/FormsControl\";\nimport Stopwatch from \"./Stopwatch/Stopwatch\";\nimport TimeSlider from \"../TimeSlider/TimeSlider\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {submitForm} from \"../../../../store/reducers/issuesReducer\";\n\nconst TimerNew = (props) => {\n\n    const isActiveTimer = useSelector(state => state.issuesList.isActiveTimer);\n    const [onSlider, setonSlider] = useState(false);\n    const [stopwatchTime, setStopwatchTime] = useState(0);\n    const [sliderValue, setSliderValue] = useState([540, 690]);\n    const dispatch = useDispatch();\n    const initialLabel = useSelector(state => state.issuesList.initialLabel);\n    const initialName = useSelector(state => state.issuesList.initialName);\n    let initalValues = {\n        label: initialLabel,\n        issue: initialName\n    }\n\n    const toggleTimer = () => {\n        setOnTimer(!onTimer);\n    };\n\n    const toggleSlider = () => {\n        setonSlider(!onSlider);\n    };\n\n    let onSubmitForm = (data) => {\n        dispatch(submitForm(stopwatchTime, sliderValue, data.label, data.issue));\n        setStopwatchTime(0);\n        setSliderValue([540, 690]);\n        setOnTimer(false);\n        setonSlider(false);\n    }\n\n    return (\n        <div>\n            {onTimer || initialLabel? null :\n                <div className={s.newWorklog}>\n                    <button className={s.appendWorklog} onClick={toggleTimer}/>\n                    <p className={s.label}>NEW WORKLOG</p>\n                </div>}\n            {onTimer || initialLabel ? <div className={s.timerOn}>\n                <IssueForm initialValues={initalValues}/>\n                <Stopwatch toggleSlider={toggleSlider} stopwatchTime={stopwatchTime} setStopwatchTime={setStopwatchTime} isActive={isActiveTimer}/>\n                {onSlider ? <TimeSlider onSubmit={onSubmitForm} sliderValue={sliderValue} setSliderValue={setSliderValue}/>: null}\n            </div> : null}\n        </div>\n    )\n};\n\nlet IssueForm = (props) => {\n    return (\n        <div>\n            <form>\n                <Field name={'label'} component={Input} placeholder={'New Label'}/>\n                <Field name={'issue'} component={Input} placeholder={'New Issue'}/>\n            </form>\n        </div>\n    )\n}\n\nIssueForm = reduxForm(\n    {\n        form: 'issueForm'\n    }\n)(IssueForm);\n\nexport default TimerNew;\n\n"]},"metadata":{},"sourceType":"module"}