{"ast":null,"code":"const NEW_WORKLOG = 'NEW_WORKLOG';\nconst DELETE_WORKLOG = 'DELETE_WORKLOG';\nconst COPY_WORKLOG = 'COPY_WORKLOG';\nconst SET_ACTIVE_TIMER = 'SET_ACTIVE_TIMER';\nconst ADD_FAVORITE = 'ADD_FAVORITE';\nconst initialState = {\n  issues: [{\n    time: {\n      from: '09:00',\n      by: '10:00'\n    },\n    label: 'JRM-310',\n    name: 'Team standup',\n    timer: '01:00:00',\n    id: 99\n  }],\n  favoriteIssues: [{\n    time: {\n      from: '14:00',\n      by: '17:30'\n    },\n    label: 'JRM-541',\n    name: 'WORK',\n    timer: '8:00:00',\n    id: 98\n  }],\n  timer: '00:00:00'\n};\nexport default function issuesReducer(state = initialState, action) {\n  let issues = [...state.issues];\n  let favoriteIssues = [...state.favoriteIssues];\n\n  switch (action.type) {\n    case NEW_WORKLOG:\n      function formatTime(time) {\n        let from = Math.trunc(time[0] / 60);\n        let from2 = time[0] % 60;\n        let by = Math.trunc(time[1] / 60);\n        let by2 = time[1] % 60;\n\n        if (time[0] < 600) {\n          from = '0' + from;\n        }\n\n        if (time[1] < 600) {\n          by = '0' + by;\n        }\n\n        if (from2 === 0) {\n          from2 = '0' + from2;\n        }\n\n        if (by2 === 0) {\n          by2 = '0' + by2;\n        }\n\n        let fromResult = from + ':' + from2;\n        let byResult = by + ':' + by2;\n        return [fromResult, byResult];\n      }\n\n      let resultTime = formatTime(action.payload.sliderValue);\n      let from = resultTime[0];\n      let by = resultTime[1];\n\n      let formatStopwatchTime = time => {\n        let seconds = time % 60;\n        let minutes = Math.trunc(time / 60 % 60);\n        let hour = Math.trunc(time / 3600 % 24);\n\n        if (hour < 10) {\n          hour = '0' + hour;\n        }\n\n        if (minutes < 10) {\n          minutes = '0' + minutes;\n        }\n\n        if (seconds < 10) {\n          seconds = '0' + seconds;\n        }\n\n        let stopWatchTime = hour + ':' + minutes + ':' + seconds;\n        return stopWatchTime;\n      };\n\n      let stopwatchTime = formatStopwatchTime(action.payload.stopwatchTime);\n\n      function getRandomArbitrary(min, max) {\n        return Math.random() * (max - min) + min;\n      }\n\n      let calculateId = getRandomArbitrary(0, 10);\n      issues.push({\n        time: {\n          from: from,\n          by: by\n        },\n        label: action.payload.label,\n        name: action.payload.issue,\n        timer: stopwatchTime,\n        id: calculateId\n      });\n      return { ...state,\n        issues\n      };\n\n    case DELETE_WORKLOG:\n      if (action.payload.isFavorite === true) favoriteIssues = favoriteIssues.filter(item => item.id !== action.payload.id);\n      if (action.payload.isFavorite === false) issues = issues.filter(item => item.id !== action.payload.id);\n      return { ...state,\n        issues,\n        favoriteIssues\n      };\n\n    case COPY_WORKLOG:\n      let initialLabel = action.payload.label;\n      let initialName = action.payload.name;\n      return { ...state,\n        initialLabel,\n        initialName\n      };\n\n    case SET_ACTIVE_TIMER:\n      return { ...state,\n        isActiveTimer: !state.isActiveTimer\n      };\n\n    case ADD_FAVORITE:\n      let item = issues.filter(i => {\n        if (i.id === action.payload.id) {\n          return i;\n        }\n\n        favoriteIssues.push(item);\n      });\n      return { ...state,\n        favoriteIssues\n      };\n\n    default:\n      return state;\n  }\n}\nexport const submitForm = (stopwatchTime, sliderValue, label, issue) => ({\n  type: NEW_WORKLOG,\n  payload: {\n    stopwatchTime,\n    sliderValue,\n    label,\n    issue\n  }\n});\nexport const deleteWorklog = (id, isFavorite) => ({\n  type: DELETE_WORKLOG,\n  payload: {\n    id,\n    isFavorite\n  }\n});\nexport const copyWorklog = (label, name) => ({\n  type: COPY_WORKLOG,\n  payload: {\n    label,\n    name\n  }\n});\nexport const addFavorite = id => ({\n  type: SET_ACTIVE_TIMER,\n  payload: {\n    id\n  }\n});","map":{"version":3,"sources":["/home/alexeyko/Documents/React-tracker/src/store/reducers/issuesReducer.js"],"names":["NEW_WORKLOG","DELETE_WORKLOG","COPY_WORKLOG","SET_ACTIVE_TIMER","ADD_FAVORITE","initialState","issues","time","from","by","label","name","timer","id","favoriteIssues","issuesReducer","state","action","type","formatTime","Math","trunc","from2","by2","fromResult","byResult","resultTime","payload","sliderValue","formatStopwatchTime","seconds","minutes","hour","stopWatchTime","stopwatchTime","getRandomArbitrary","min","max","random","calculateId","push","issue","isFavorite","filter","item","initialLabel","initialName","isActiveTimer","i","submitForm","deleteWorklog","copyWorklog","addFavorite"],"mappings":"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","sourcesContent":["const NEW_WORKLOG = 'NEW_WORKLOG';\nconst DELETE_WORKLOG = 'DELETE_WORKLOG';\nconst COPY_WORKLOG = 'COPY_WORKLOG';\nconst SET_ACTIVE_TIMER = 'SET_ACTIVE_TIMER';\nconst ADD_FAVORITE = 'ADD_FAVORITE';\n\n\nconst initialState = {\n    issues: [\n        {\n            time: {\n                from: '09:00',\n                by: '10:00'\n            },\n            label: 'JRM-310',\n            name: 'Team standup',\n            timer: '01:00:00',\n            id: 99\n        },\n    ],\n    favoriteIssues: [\n        {\n            time: {\n                from: '14:00',\n                by: '17:30'\n            },\n            label: 'JRM-541',\n            name: 'WORK',\n            timer: '8:00:00',\n            id: 98\n        },\n    ],\n    timer: '00:00:00'\n}\n\nexport default function issuesReducer(state = initialState, action) {\n    let issues = [...state.issues];\n    let favoriteIssues = [...state.favoriteIssues];\n\n    switch (action.type) {\n        case NEW_WORKLOG:\n\n        function formatTime(time) {\n            let from = Math.trunc(time[0] / 60);\n            let from2 = time[0] % 60;\n            let by = Math.trunc(time[1] / 60);\n            let by2 = time[1] % 60;\n\n            if (time[0] < 600) {\n                from = '0' + from;\n            }\n            if (time[1] < 600) {\n                by = '0' + by;\n            }\n            if (from2 === 0) {\n                from2 = '0' + from2;\n            }\n            if (by2 === 0) {\n                by2 = '0' + by2;\n            }\n\n            let fromResult = from + ':' + from2;\n            let byResult = by + ':' + by2;\n            return [fromResult, byResult];\n        }\n\n            let resultTime = formatTime(action.payload.sliderValue);\n            let from = resultTime[0];\n            let by = resultTime[1];\n\n            let formatStopwatchTime = (time) => {\n                let seconds = time % 60;\n                let minutes = Math.trunc(time / 60 % 60);\n                let hour = Math.trunc(time / 3600 % 24);\n                if (hour < 10) {\n                    hour = '0' + hour\n                }\n                if (minutes < 10) {\n                    minutes = '0' + minutes\n                }\n                if (seconds < 10) {\n                    seconds = '0' + seconds\n                }\n                let stopWatchTime = hour + ':' + minutes + ':' + seconds;\n                return stopWatchTime;\n            }\n\n            let stopwatchTime = formatStopwatchTime(action.payload.stopwatchTime);\n\n        function getRandomArbitrary(min, max) {\n            return Math.random() * (max - min) + min;\n        }\n\n            let calculateId = getRandomArbitrary(0, 10);\n\n            issues.push(\n                {\n                    time: {\n                        from: from,\n                        by: by\n                    },\n                    label: action.payload.label,\n                    name: action.payload.issue,\n                    timer: stopwatchTime,\n                    id: calculateId\n                });\n            return {\n                ...state,\n                issues\n            };\n        case DELETE_WORKLOG:\n            if (action.payload.isFavorite === true) favoriteIssues = favoriteIssues.filter(item => item.id !== action.payload.id);\n            if (action.payload.isFavorite === false) issues = issues.filter(item => item.id !== action.payload.id);\n            return {\n                ...state,\n                issues,\n                favoriteIssues\n            };\n        case COPY_WORKLOG:\n            let initialLabel = action.payload.label;\n            let initialName = action.payload.name;\n            return {\n                ...state,\n                initialLabel,\n                initialName,\n            };\n        case SET_ACTIVE_TIMER:\n            return {\n                ...state,\n                isActiveTimer: !state.isActiveTimer\n            };\n        case ADD_FAVORITE:\n           let item = issues.filter(i => {\n               if(i.id === action.payload.id) {\n                   return i;\n               }\n               favoriteIssues.push(item);\n           });\n            return {\n                ...state,\n                favoriteIssues\n            };\n        default:\n            return state;\n    }\n}\n\nexport const submitForm = (stopwatchTime, sliderValue, label, issue) => ({\n    type: NEW_WORKLOG, payload: {stopwatchTime, sliderValue, label, issue}\n});\n\nexport const deleteWorklog = (id, isFavorite) => ({\n    type: DELETE_WORKLOG, payload: {id, isFavorite}\n});\n\nexport const copyWorklog = (label, name) => ({\n    type: COPY_WORKLOG, payload: {label, name}\n});\nexport const addFavorite = (id) => ({\n    type: SET_ACTIVE_TIMER, payload: {id}\n});\n"]},"metadata":{},"sourceType":"module"}