{"ast":null,"code":"const CHANGE_DATE = 'SHOW-CHANGE_DATE';\n\nconst getDate = () => {\n  let months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  let today = new Date();\n  let date = `${today.getDate()} ${months[today.getMonth()]} ${today.getFullYear()}`;\n  return date;\n};\n\nconst getToday = () => {\n  let date = new Date();\n  let issuesDate = `${date.getFullYear()}${date.getMonth()}${date.getDay()}`;\n};\n\nconst initialState = {\n  day: getDate(),\n  today: new Date(),\n  todayParse: getToday()\n};\nexport default function dateReducer(state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_DATE:\n      {\n        debugger;\n\n        let day = today => {\n          let months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n          let date = `${today.getDate()} ${months[today.getMonth()]} ${today.getFullYear()}`;\n          return date;\n        };\n\n        let newDay = day(action.payload.value);\n\n        const getToday = date => {\n          let issuesDate = `${date.getFullYear()}${date.getMonth()}${date.getDay()}`;\n        };\n\n        let todayDate = getToday(action.payload.value);\n        return { ...state,\n          day: newDay,\n          today: action.payload.value,\n          todayParse: todayDate\n        };\n      }\n\n    default:\n      return state;\n  }\n}\nexport const onChangeDate = value => ({\n  type: CHANGE_DATE,\n  payload: {\n    value\n  }\n});","map":{"version":3,"sources":["/home/alexeyko/Documents/React-tracker/src/store/reducers/dateReducer.js"],"names":["CHANGE_DATE","getDate","months","today","Date","date","getMonth","getFullYear","getToday","issuesDate","getDay","initialState","day","todayParse","dateReducer","state","action","type","newDay","payload","value","todayDate","onChangeDate"],"mappings":"AAAA,MAAMA,WAAW,GAAG,kBAApB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAClB,MAAIC,MAAM,GAAG,CACT,SADS,EAET,UAFS,EAGT,OAHS,EAIT,OAJS,EAKT,KALS,EAMT,MANS,EAOT,MAPS,EAQT,QARS,EAST,WATS,EAUT,SAVS,EAWT,UAXS,EAYT,UAZS,CAAb;AAcA,MAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,MAAIC,IAAI,GAAI,GAAEF,KAAK,CAACF,OAAN,EAAgB,IAAGC,MAAM,CAACC,KAAK,CAACG,QAAN,EAAD,CAAmB,IAAGH,KAAK,CAACI,WAAN,EAAoB,EAAjF;AACA,SAAOF,IAAP;AACH,CAlBD;;AAoBA,MAAMG,QAAQ,GAAG,MAAM;AACnB,MAAIH,IAAI,GAAG,IAAID,IAAJ,EAAX;AACA,MAAIK,UAAU,GAAI,GAAEJ,IAAI,CAACE,WAAL,EAAmB,GAAEF,IAAI,CAACC,QAAL,EAAgB,GAAED,IAAI,CAACK,MAAL,EAAc,EAAzE;AACH,CAHD;;AAMA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,GAAG,EAAEX,OAAO,EADK;AAEjBE,EAAAA,KAAK,EAAE,IAAIC,IAAJ,EAFU;AAGjBS,EAAAA,UAAU,EAAEL,QAAQ;AAHH,CAArB;AAMA,eAAe,SAASM,WAAT,CAAqBC,KAAK,GAAGJ,YAA7B,EAA2CK,MAA3C,EAAmD;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKjB,WAAL;AAAkB;AACd;;AACA,YAAIY,GAAG,GAAIT,KAAD,IAAW;AACjB,cAAID,MAAM,GAAG,CACT,SADS,EAET,UAFS,EAGT,OAHS,EAIT,OAJS,EAKT,KALS,EAMT,MANS,EAOT,MAPS,EAQT,QARS,EAST,WATS,EAUT,SAVS,EAWT,UAXS,EAYT,UAZS,CAAb;AAcA,cAAIG,IAAI,GAAI,GAAEF,KAAK,CAACF,OAAN,EAAgB,IAAGC,MAAM,CAACC,KAAK,CAACG,QAAN,EAAD,CAAmB,IAAGH,KAAK,CAACI,WAAN,EAAoB,EAAjF;AACA,iBAAOF,IAAP;AACH,SAjBD;;AAkBA,YAAIa,MAAM,GAAGN,GAAG,CAACI,MAAM,CAACG,OAAP,CAAeC,KAAhB,CAAhB;;AAEA,cAAMZ,QAAQ,GAAIH,IAAD,IAAU;AACvB,cAAII,UAAU,GAAI,GAAEJ,IAAI,CAACE,WAAL,EAAmB,GAAEF,IAAI,CAACC,QAAL,EAAgB,GAAED,IAAI,CAACK,MAAL,EAAc,EAAzE;AACH,SAFD;;AAGA,YAAIW,SAAS,GAAGb,QAAQ,CAACQ,MAAM,CAACG,OAAP,CAAeC,KAAhB,CAAxB;AACA,eAAO,EAAC,GAAGL,KAAJ;AACHH,UAAAA,GAAG,EAAEM,MADF;AAEHf,UAAAA,KAAK,EAAEa,MAAM,CAACG,OAAP,CAAeC,KAFnB;AAGHP,UAAAA,UAAU,EAAEQ;AAHT,SAAP;AAKH;;AACD;AACI,aAAON,KAAP;AAlCR;AAoCH;AAED,OAAO,MAAMO,YAAY,GAAIF,KAAD,KAAY;AACpCH,EAAAA,IAAI,EAAEjB,WAD8B;AACjBmB,EAAAA,OAAO,EAAE;AAACC,IAAAA;AAAD;AADQ,CAAZ,CAArB","sourcesContent":["const CHANGE_DATE = 'SHOW-CHANGE_DATE';\n\nconst getDate = () => {\n    let months = [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December',\n    ];\n    let today = new Date();\n    let date = `${today.getDate()} ${months[today.getMonth()]} ${today.getFullYear()}`;\n    return date;\n}\n\nconst getToday = () => {\n    let date = new Date();\n    let issuesDate = `${date.getFullYear()}${date.getMonth()}${date.getDay()}`;\n}\n\n\nconst initialState = {\n    day: getDate(),\n    today: new Date(),\n    todayParse: getToday(),\n}\n\nexport default function dateReducer(state = initialState, action) {\n    switch (action.type) {\n        case CHANGE_DATE: {\n            debugger\n            let day = (today) => {\n                let months = [\n                    'January',\n                    'February',\n                    'March',\n                    'April',\n                    'May',\n                    'June',\n                    'July',\n                    'August',\n                    'September',\n                    'October',\n                    'November',\n                    'December',\n                ];\n                let date = `${today.getDate()} ${months[today.getMonth()]} ${today.getFullYear()}`;\n                return date;\n            }\n            let newDay = day(action.payload.value);\n\n            const getToday = (date) => {\n                let issuesDate = `${date.getFullYear()}${date.getMonth()}${date.getDay()}`;\n            }\n            let todayDate = getToday(action.payload.value);\n            return {...state,\n                day: newDay,\n                today: action.payload.value,\n                todayParse: todayDate,\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport const onChangeDate = (value) => ({\n    type: CHANGE_DATE, payload: {value}\n});\n"]},"metadata":{},"sourceType":"module"}