{"ast":null,"code":"var _jsxFileName = \"/home/alexeyko/Documents/React-tracker/src/components/Main/Tracker/TimerNew/Stopwatch/Stopwatch.jsx\";\nimport React, { useState } from 'react';\nimport s from './Stopwatch.module.css';\nimport { Field, reduxForm } from \"redux-form\";\nimport { Input } from \"../../../../common/Forms/FormsControl\";\n\nconst Stopwatch = () => {\n  const [second, setSecond] = useState(\"00\");\n  const [minute, setMinute] = useState(\"00\");\n  const [isActive, setIsActive] = useState(false);\n  const [counter, setCounter] = useState(1000);\n  useEffect(() => {\n    let intervalId;\n\n    if (isActive) {\n      intervalId = setInterval(() => {\n        const secondCounter = counter % 60;\n        const minuteCounter = Math.floor(counter / 60);\n        let computedSecond = String(secondCounter).length === 1 ? `0${secondCounter}` : secondCounter;\n        let computedMinute = String(minuteCounter).length === 1 ? `0${minuteCounter}` : minuteCounter;\n        setSecond(computedSecond);\n        setMinute(computedMinute);\n        setCounter(counter => counter + 1);\n      }, 1000);\n    }\n\n    return () => clearInterval(intervalId);\n  }, [isActive, counter]);\n\n  function stopTimer() {\n    console.log(counter);\n    setIsActive(false);\n    setCounter(0);\n    setSecond(\"00\");\n    setMinute(\"00\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    class: \"minute\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, minute), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \":\"), /*#__PURE__*/React.createElement(\"span\", {\n    class: \"second\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, second)), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsActive(!isActive),\n    class: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, isActive ? \"Pause\" : \"Start\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: stopTimer,\n    class: \"reset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Reset\")));\n};\n\nexport default Stopwatch;","map":{"version":3,"sources":["/home/alexeyko/Documents/React-tracker/src/components/Main/Tracker/TimerNew/Stopwatch/Stopwatch.jsx"],"names":["React","useState","s","Field","reduxForm","Input","Stopwatch","second","setSecond","minute","setMinute","isActive","setIsActive","counter","setCounter","useEffect","intervalId","setInterval","secondCounter","minuteCounter","Math","floor","computedSecond","String","length","computedMinute","clearInterval","stopTimer","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,CAAP,MAAc,wBAAd;AACA,SAAQC,KAAR,EAAeC,SAAf,QAA+B,YAA/B;AACA,SAAQC,KAAR,QAAoB,uCAApB;;AAGA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;AAEAc,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIC,UAAJ;;AAEA,QAAIL,QAAJ,EAAc;AACVK,MAAAA,UAAU,GAAGC,WAAW,CAAC,MAAM;AAC3B,cAAMC,aAAa,GAAGL,OAAO,GAAG,EAAhC;AACA,cAAMM,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWR,OAAO,GAAG,EAArB,CAAtB;AAEA,YAAIS,cAAc,GACdC,MAAM,CAACL,aAAD,CAAN,CAAsBM,MAAtB,KAAiC,CAAjC,GACO,IAAGN,aAAc,EADxB,GAEMA,aAHV;AAIA,YAAIO,cAAc,GACdF,MAAM,CAACJ,aAAD,CAAN,CAAsBK,MAAtB,KAAiC,CAAjC,GACO,IAAGL,aAAc,EADxB,GAEMA,aAHV;AAKAX,QAAAA,SAAS,CAACc,cAAD,CAAT;AACAZ,QAAAA,SAAS,CAACe,cAAD,CAAT;AAEAX,QAAAA,UAAU,CAAED,OAAD,IAAaA,OAAO,GAAG,CAAxB,CAAV;AACH,OAjBuB,EAiBrB,IAjBqB,CAAxB;AAkBH;;AAED,WAAO,MAAMa,aAAa,CAACV,UAAD,CAA1B;AACH,GAzBQ,EAyBN,CAACL,QAAD,EAAWE,OAAX,CAzBM,CAAT;;AA2BA,WAASc,SAAT,GAAqB;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAYhB,OAAZ;AACAD,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,IAAAA,UAAU,CAAC,CAAD,CAAV;AACAN,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAE,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH;;AAED,sBACI;AAAK,IAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,KAAK,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBD,MAAtB,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,eAGI;AAAM,IAAA,KAAK,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBF,MAAtB,CAHJ,CADJ,eAMI;AAAK,IAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,OAAO,EAAE,MAAMK,WAAW,CAAC,CAACD,QAAF,CAAlC;AAA+C,IAAA,KAAK,EAAC,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,QAAQ,GAAG,OAAH,GAAa,OAD1B,CADJ,eAII;AAAQ,IAAA,OAAO,EAAEgB,SAAjB;AAA4B,IAAA,KAAK,EAAC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ,CANJ,CADJ;AAiBH,CA1DD;;AA4DA,eAAerB,SAAf","sourcesContent":["import React, {useState} from 'react';\nimport s from './Stopwatch.module.css';\nimport {Field, reduxForm} from \"redux-form\";\nimport {Input} from \"../../../../common/Forms/FormsControl\";\n\n\nconst Stopwatch = () => {\n    const [second, setSecond] = useState(\"00\");\n    const [minute, setMinute] = useState(\"00\");\n    const [isActive, setIsActive] = useState(false);\n    const [counter, setCounter] = useState(1000);\n\n    useEffect(() => {\n        let intervalId;\n\n        if (isActive) {\n            intervalId = setInterval(() => {\n                const secondCounter = counter % 60;\n                const minuteCounter = Math.floor(counter / 60);\n\n                let computedSecond =\n                    String(secondCounter).length === 1\n                        ? `0${secondCounter}`\n                        : secondCounter;\n                let computedMinute =\n                    String(minuteCounter).length === 1\n                        ? `0${minuteCounter}`\n                        : minuteCounter;\n\n                setSecond(computedSecond);\n                setMinute(computedMinute);\n\n                setCounter((counter) => counter + 1);\n            }, 1000);\n        }\n\n        return () => clearInterval(intervalId);\n    }, [isActive, counter]);\n\n    function stopTimer() {\n        console.log(counter);\n        setIsActive(false);\n        setCounter(0);\n        setSecond(\"00\");\n        setMinute(\"00\");\n    }\n\n    return (\n        <div class=\"container\">\n            <div class=\"time\">\n                <span class=\"minute\">{minute}</span>\n                <span>:</span>\n                <span class=\"second\">{second}</span>\n            </div>\n            <div class=\"buttons\">\n                <button onClick={() => setIsActive(!isActive)} class=\"start\">\n                    {isActive ? \"Pause\" : \"Start\"}\n                </button>\n                <button onClick={stopTimer} class=\"reset\">\n                    Reset\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Stopwatch;\n"]},"metadata":{},"sourceType":"module"}