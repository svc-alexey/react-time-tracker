[{"/home/alexeyko/Documents/React-tracker/src/index.js":"1","/home/alexeyko/Documents/React-tracker/src/serviceWorker.js":"2","/home/alexeyko/Documents/React-tracker/src/App.js":"3","/home/alexeyko/Documents/React-tracker/src/store/configureStore.js":"4","/home/alexeyko/Documents/React-tracker/src/components/Header/Header.jsx":"5","/home/alexeyko/Documents/React-tracker/src/components/Main/Main.jsx":"6","/home/alexeyko/Documents/React-tracker/src/store/reducers/index.js":"7","/home/alexeyko/Documents/React-tracker/src/components/Main/AllIssues/AllIssueContainer.jsx":"8","/home/alexeyko/Documents/React-tracker/src/components/Main/FavoriteIssues/FavoriteIssues.jsx":"9","/home/alexeyko/Documents/React-tracker/src/components/Main/DateSorting/DateSorting.jsx":"10","/home/alexeyko/Documents/React-tracker/src/components/Main/Tracker/Tracker.jsx":"11","/home/alexeyko/Documents/React-tracker/src/store/reducers/dateReducer.js":"12","/home/alexeyko/Documents/React-tracker/src/store/reducers/issuesReducer.js":"13","/home/alexeyko/Documents/React-tracker/src/store/reducers/syncReducer.js":"14","/home/alexeyko/Documents/React-tracker/src/components/Main/AllIssues/AllIssues.jsx":"15","/home/alexeyko/Documents/React-tracker/src/components/Main/AllIssues/Issue/Issue.jsx":"16","/home/alexeyko/Documents/React-tracker/src/components/Main/DateSorting/Calendar/NewCalendar.jsx":"17","/home/alexeyko/Documents/React-tracker/src/components/Main/Tracker/TimerNew/TimerNew.jsx":"18","/home/alexeyko/Documents/React-tracker/src/components/Main/Tracker/Sync/Sync.jsx":"19","/home/alexeyko/Documents/React-tracker/src/common/Forms/FormsControl.js":"20","/home/alexeyko/Documents/React-tracker/src/components/Main/Tracker/TimerNew/Stopwatch/Stopwatch.jsx":"21","/home/alexeyko/Documents/React-tracker/src/components/Main/Tracker/TimeSlider/TimeSlider.jsx":"22","/home/alexeyko/Documents/React-tracker/src/components/Main/Tracker/SyncIssue/SyncIssue.jsx":"23","/home/alexeyko/Documents/React-tracker/src/utilities/validators/validators.js":"24"},{"size":746,"mtime":1600854787525,"results":"25","hashOfConfig":"26"},{"size":5086,"mtime":1599645930331,"results":"27","hashOfConfig":"26"},{"size":318,"mtime":1600791965645,"results":"28","hashOfConfig":"26"},{"size":161,"mtime":1600972210921,"results":"29","hashOfConfig":"26"},{"size":1764,"mtime":1612716277604,"results":"30","hashOfConfig":"26"},{"size":1284,"mtime":1611600055920,"results":"31","hashOfConfig":"26"},{"size":365,"mtime":1612716771502,"results":"32","hashOfConfig":"26"},{"size":453,"mtime":1613762423707,"results":"33","hashOfConfig":"26"},{"size":1125,"mtime":1613761054737,"results":"34","hashOfConfig":"26"},{"size":1157,"mtime":1613468159059,"results":"35","hashOfConfig":"26"},{"size":1274,"mtime":1613135907303,"results":"36","hashOfConfig":"26"},{"size":729,"mtime":1613762423779,"results":"37","hashOfConfig":"26"},{"size":4351,"mtime":1613762423759,"results":"38","hashOfConfig":"26"},{"size":505,"mtime":1601801530646,"results":"39","hashOfConfig":"26"},{"size":1061,"mtime":1613761054745,"results":"40","hashOfConfig":"26"},{"size":2372,"mtime":1613761706147,"results":"41","hashOfConfig":"26"},{"size":699,"mtime":1613762220305,"results":"42","hashOfConfig":"26"},{"size":2726,"mtime":1613760464496,"results":"43","hashOfConfig":"26"},{"size":913,"mtime":1601801530638,"results":"44","hashOfConfig":"26"},{"size":689,"mtime":1613304740008,"results":"45","hashOfConfig":"26"},{"size":1806,"mtime":1613759945474,"results":"46","hashOfConfig":"26"},{"size":3530,"mtime":1613311661168,"results":"47","hashOfConfig":"26"},{"size":375,"mtime":1599646175447,"results":"48","hashOfConfig":"26"},{"size":101,"mtime":1613304685363,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3s3wz",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/alexeyko/Documents/React-tracker/src/index.js",[],"/home/alexeyko/Documents/React-tracker/src/serviceWorker.js",[],"/home/alexeyko/Documents/React-tracker/src/App.js",[],"/home/alexeyko/Documents/React-tracker/src/store/configureStore.js",[],"/home/alexeyko/Documents/React-tracker/src/components/Header/Header.jsx",[],"/home/alexeyko/Documents/React-tracker/src/components/Main/Main.jsx",[],"/home/alexeyko/Documents/React-tracker/src/store/reducers/index.js",[],"/home/alexeyko/Documents/React-tracker/src/components/Main/AllIssues/AllIssueContainer.jsx",[],"/home/alexeyko/Documents/React-tracker/src/components/Main/FavoriteIssues/FavoriteIssues.jsx",[],"/home/alexeyko/Documents/React-tracker/src/components/Main/DateSorting/DateSorting.jsx",[],"/home/alexeyko/Documents/React-tracker/src/components/Main/Tracker/Tracker.jsx",[],"/home/alexeyko/Documents/React-tracker/src/store/reducers/dateReducer.js",[],"/home/alexeyko/Documents/React-tracker/src/store/reducers/issuesReducer.js",[],"/home/alexeyko/Documents/React-tracker/src/store/reducers/syncReducer.js",[],"/home/alexeyko/Documents/React-tracker/src/components/Main/AllIssues/AllIssues.jsx",[],"/home/alexeyko/Documents/React-tracker/src/components/Main/AllIssues/Issue/Issue.jsx",[],"/home/alexeyko/Documents/React-tracker/src/components/Main/DateSorting/Calendar/NewCalendar.jsx",[],"/home/alexeyko/Documents/React-tracker/src/components/Main/Tracker/TimerNew/TimerNew.jsx",["102"],"import React, {useEffect, useState} from 'react';\nimport s from './TimerNew.module.css';\nimport {Field, reduxForm} from \"redux-form\";\nimport {Input} from \"../../../../common/Forms/FormsControl\";\nimport Stopwatch from \"./Stopwatch/Stopwatch\";\nimport TimeSlider from \"../TimeSlider/TimeSlider\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {copyWorklog, submitForm} from \"../../../../store/reducers/issuesReducer\";\n\nconst TimerNew = (props) => {\n        const [onTimer, setOnTimer] = useState(false);\n        const [onSlider, setOnSlider] = useState(false);\n        const [stopwatchTime, setStopwatchTime] = useState(0);\n        const [sliderValue, setSliderValue] = useState([540, 690]);\n        const dispatch = useDispatch();\n        const initialLabel = useSelector(state => state.issuesList.initialLabel);\n        const initialName = useSelector(state => state.issuesList.initialName);\n        let initalValues = {\n            label: initialLabel,\n            issue: initialName\n        }\n\n        const toggleTimer = () => {\n            setOnTimer(!onTimer);\n        };\n\n        const toggleSlider = () => {\n            setOnSlider(!onSlider);\n        };\n\n        let onSubmitForm = (data) => {\n            dispatch(submitForm(stopwatchTime, sliderValue, data.label, data.issue));\n            dispatch(copyWorklog(null,null));\n            setStopwatchTime(0);\n            setSliderValue([540, 690]);\n            toggleSlider();\n            toggleTimer();\n        }\n\n        return (\n            <div>\n                {onTimer || initialLabel ? null :\n                    <div className={s.newWorklog}>\n                        <button className={s.appendWorklog} onClick={toggleTimer}/>\n                        <p className={s.label}>NEW WORKLOG</p>\n                    </div>}\n                {onTimer || initialLabel ? <div className={s.timerOn}>\n                    <IssueForm initialValues={initalValues}/>\n                    <Stopwatch toggleSlider={toggleSlider} stopwatchTime={stopwatchTime}\n                               setStopwatchTime={setStopwatchTime}/>\n                    {onSlider ? <TimeSlider onSubmit={onSubmitForm} sliderValue={sliderValue}\n                                            setSliderValue={setSliderValue}/> : null}\n                </div> : null}\n            </div>\n        )\n    }\n;\n\nlet IssueForm = (props) => {\n    return (\n        <div>\n            <form>\n                <Field name={'label'} component={Input} placeholder={'New Label'}/>\n                <Field name={'issue'} component={Input} placeholder={'New Issue'}/>\n            </form>\n        </div>\n    )\n}\n\nIssueForm = reduxForm(\n    {\n        form: 'issueForm'\n    }\n)(IssueForm);\n\nexport default TimerNew;\n\n","/home/alexeyko/Documents/React-tracker/src/components/Main/Tracker/Sync/Sync.jsx",[],"/home/alexeyko/Documents/React-tracker/src/common/Forms/FormsControl.js",["103"],"import React from \"react\";\nimport classes from \"./FormsControl.module.css\";\n\n\nexport const Input = ({input, meta, ...props}) => {\n    const hasError = meta.touched && meta.error;\n    return (\n        <div className={classes.formControl}>\n            <input {...input} {...props} className={classes.inputStyle}/>\n        </div>\n    )\n}\n\nexport const Input2 = ({input, meta, ...props}) => {\n    const hasError = meta.touched && meta.error;\n    return (\n        <div className={classes.formControl}>\n            <input {...input} {...props} className={classes.inputStyle2}/>\n            <div>{hasError ? <span className={classes.error}>{meta.error}</span> : null}</div>\n        </div>\n    )\n}","/home/alexeyko/Documents/React-tracker/src/components/Main/Tracker/TimerNew/Stopwatch/Stopwatch.jsx",["104"],"import React, {useEffect, useState} from 'react';\nimport s from './Stopwatch.module.css';\n\nconst Stopwatch = (props) => {\n    const [seconds, setSecond] = useState(0); // убрать отсюдова\n    const [minutes, setMinute] = useState(0);\n    const [hours, setHour] = useState(0);\n    const [isActive, setIsActive] = useState(true);\n    const [counter, setCounter] = useState(0);\n\n    useEffect(() => {\n        let intervalId;\n\n        if (isActive) {\n            intervalId = setInterval(() => {\n                setSecond(counter);\n                if (minutes === 60) {\n                    setHour(hours + 1);\n                    setMinute(0);\n                }\n                if (seconds === 60) {\n                    setMinute(minutes + 1);\n                    setSecond(0);\n                    setCounter(0);\n                }\n                setCounter((counter) => counter + 1);\n                props.setStopwatchTime(counter);\n            }, 1000);\n        }\n\n        return () => clearInterval(intervalId);\n    }, [isActive, counter]);\n\n    let stopwatchTime = {\n        hours: (hours >= 10) ? hours : '0' + hours,\n        minutes: (minutes >= 10) ? minutes : '0' + minutes,\n        seconds: (seconds >= 10) ? seconds : '0' + seconds\n    }\n\n    return (\n        <div className={s.container}>\n            <div className={s.stopwatch}>\n                {stopwatchTime.hours}:{stopwatchTime.minutes}:{stopwatchTime.seconds}\n            </div>\n            <div className={s.buttons}>\n                <button className={`${s.button} ${s.stopBtn}`} onClick={props.toggleSlider}/>\n                <button className={`${s.button} ${s.pauseBtn}`} onClick={() => {\n                    setIsActive(!isActive)\n                }}/>\n            </div>\n        </div>\n    );\n};\n\nexport default Stopwatch;\n","/home/alexeyko/Documents/React-tracker/src/components/Main/Tracker/TimeSlider/TimeSlider.jsx",["105"],"import React, {useState} from \"react\";\nimport s from './TimeSlider.module.css'\nimport accept from '../../../../img/accept.svg'\nimport decline from '../../../../img/decline.svg'\nimport {Slider} from \"@material-ui/core\";\nimport {makeStyles, withStyles} from \"@material-ui/core/styles\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Input2} from \"../../../../common/Forms/FormsControl\";\nimport {required} from \"../../../../utilities/validators/validators\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: 543,\n    }\n})\n\nfunction valueLabelFormat(value) {\n    let a = Math.trunc(value / 60);\n    let b = value % 60;\n    if (value < 600) {\n        a = '0' + a;\n    }\n    if (b === 0) {\n        b = '0' + b;\n    }\n    return `${a} : ${b}`;\n}\n\nconst RangeSlider = withStyles({\n    root: {\n        color: '#FFCC40',\n    },\n    track: {\n        height: 10,\n    },\n    rail: {\n        color: '#d8d8d8',\n        opacity: 1,\n        height: 10,\n        borderRadius: 4\n    },\n    thumb: {\n        height: 16,\n        width: 16,\n        backgroundColor: '#FFCC40',\n        marginTop: -3,\n        border: '6px solid #fff'\n    },\n    valueLabel: {\n        left: -20,\n        top: 25,\n        '& *': {\n            background: \"transparent\",\n            color: \"#000\",\n            width: 50,\n            height: 50,\n            fontSize: 16\n        },\n    }\n})(Slider);\n\nconst TimeSlider = (props) => {\n\n\n    const handleChange = (event, newValue) => {\n        props.setSliderValue(newValue);\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={s.wrapperWorklog}>\n            <div className={s.worklogWindow}>\n                <div className={s.header}><p>New worklog</p></div>\n                <div className={s.container}>\n                  <div className={s.rangeSlider}>\n                    <div className={classes.root}>\n                        <RangeSlider\n                            value={props.sliderValue}\n                            onChange={handleChange}\n                            valueLabelDisplay=\"on\"\n                            aria-labelledby=\"range-slider\"\n                            getAriaValueText={valueLabelFormat}\n                            valueLabelFormat={valueLabelFormat}\n                            min={420}\n                            max={1140}\n                            step={30}\n                        />\n                    </div>\n                  </div>\n                    <IssueForm onSubmit={props.onSubmit}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nlet IssueForm = (props) => {\n    return (\n        <div>\n            <form onSubmit={props.handleSubmit}>\n                <label>Worklog name</label>\n                <Field name={'label'} component={Input2} placeholder={'Enter the worklog name'} validate={[required]}/>\n                <label>Issue</label>\n                <Field name={'issue'} component={Input2} placeholder={'Enter the issue name'} validate={[required]}/>\n                <div className={s.worklogButtons}>\n                    <button className={s.acceptButton}>\n                        <img className={s.accept} src={accept} alt='accept'/>\n                    </button>\n                    <button className={s.declineButton}>\n                        <img className={s.decline} src={decline} alt='decline'/>\n                    </button>\n                </div>\n            </form>\n        </div>\n    )\n};\n\nIssueForm = reduxForm(\n    {\n        form: 'issueForm'\n    }\n)(IssueForm);\n\nexport default TimeSlider;\n","/home/alexeyko/Documents/React-tracker/src/components/Main/Tracker/SyncIssue/SyncIssue.jsx",[],"/home/alexeyko/Documents/React-tracker/src/utilities/validators/validators.js",[],{"ruleId":"106","severity":1,"message":"107","line":1,"column":16,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"106","severity":1,"message":"110","line":6,"column":11,"nodeType":"108","messageId":"109","endLine":6,"endColumn":19},{"ruleId":"111","severity":1,"message":"112","line":32,"column":8,"nodeType":"113","endLine":32,"endColumn":27,"suggestions":"114"},{"ruleId":"106","severity":1,"message":"115","line":1,"column":16,"nodeType":"108","messageId":"109","endLine":1,"endColumn":24},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'hasError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'hours', 'minutes', 'props', and 'seconds'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["116"],"'useState' is defined but never used.",{"desc":"117","fix":"118"},"Update the dependencies array to be: [isActive, counter, minutes, seconds, props, hours]",{"range":"119","text":"120"},[1017,1036],"[isActive, counter, minutes, seconds, props, hours]"]